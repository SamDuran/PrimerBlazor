@page "/RegistroProductos"
@page "/RegistroProductos/{ProductoId:int}"
@page "/Productos"
@page "/Productos/{ProductoId:int}"
@inject IToastService toastService

<EditForm Model="producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div className="Container">
        <div class="card align-items-center" style=" box-shadow: 8px 8px rgba(0, 0, 0, 0.26);">

            <div class="card-header">
                <h3>Registro de productos</h3>
            </div>

            <div class="card-body" style="width: 40rem;">
                @* Producto Id *@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group" style="margin: 22px;">
                            @* <label>Producto Id</label> *@
                            <div class="input-group">
                                <span class="input-group-text">ID Producto</span>
                                <InputNumber @bind-Value="producto.ProductoId" class="form-control col-4" />
                                <ValidationMessage For="@(() => producto.ProductoId)" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text"
                                        @onclick="Buscar">🔎Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                @* Descripción *@
                <div Class="form-group" style="margin: 22px;">
                    @* <label>Descripción</label> *@
                    <div class="input-group">
                        <span class="input-group-text">Descripción</span>
                        <InputText class="form-control" @bind-Value="producto.Descripcion"
                            placeholder="Descripción del producto" />
                        <ValidationMessage For="@(() => producto.Descripcion)" />
                    </div>
                </div>

                @* Existencia *@
                <div Class="form-group" style="margin: 22px;">
                    @* <label>Existencia</label> *@
                    <div class="input-group">
                        <span class="input-group-text">Existencia</span>
                        <InputNumber id="existencia" class="form-control" @bind-Value="producto.Existencia"
                            @onchange="ExistenciaOrCostoChanged" />
                        <ValidationMessage For="@(() => producto.Existencia)" />
                    </div>
                </div>

                @* Costo *@
                <div Class="form-group" style="margin: 22px;">
                    @* <label>Costo</label> *@
                    <div class="input-group">
                        <span class="input-group-text">Costo</span>
                        <InputNumber id="costo" class="form-control" @bind-Value="producto.Costo"
                            @onchange="CostoChanged" />
                        <ValidationMessage For="@(() => producto.Costo)" />
                    </div>
                </div>

                @* Valor Inventario *@
                <div Class="form-group" style="margin: 22px;">
                    @* <label>Valor Inventario</label> *@
                    <div class="input-group">
                        <span class="input-group-text">Valor Inventario</span>
                        <InputNumber readonly class="form-control" @bind-Value="producto.ValorInventario" />
                        <ValidationMessage For="@(() => producto.ValorInventario)" />
                    </div>
                </div>

                @* Precio *@
                <div Class="form-group" style="margin: 22px;">
                    @* <label>Precio</label> *@
                    <div class="input-group">
                        <span class="input-group-text">Precio</span>
                        <InputNumber class="form-control" @bind-Value="producto.Precio"
                            @onchange="PrecioOrCostoChanged" />
                        <ValidationMessage For="@(() => producto.Precio)" />
                    </div>
                </div>

                @* Porcentaje Ganancia *@
                <div Class="form-group" style="margin: 22px;">
                    <div class="input-group" style="width: 15rem;">
                        <span class="input-group-text">Ganancia</span>
                        <InputNumber @bind-Value="producto.Ganancia" @onchange="GananciaChanged"
                            class="form-control col-4" />
                        <span class="input-group-text">%</span>
                        <ValidationMessage For="@(() => producto.Ganancia)" />
                    </div>
                </div>

            </div> @* BOTONES *@
            <div class="card-footer">
                @* Botones *@
                <div class="form-group text-center" display: inline-block>
                    <button type="button" style="margin: 5px;" class="btn btn-lg btn-primary"
                        @onclick="Nuevo">☀Nuevo</button>
                    <button type="submit" style="margin: 5px;" class="btn btn-lg btn-success"
                        @onclick="Guardar">➕Guardar</button>
                    <button type="button" style="margin: 5px;" class="btn btn-lg btn-danger"
                        @onclick="Eliminar">➖Eliminar</button>
                </div>
            </div>
        </div>



        @* PRODUCTO DETALLE *@
        <div class="card align-items-center" style="box-shadow: 8px 8px rgba(0, 0, 0, 0.26);">

            <div class="card-header align-items-center">
                <h3>Detalles de producto</h3>
            </div>

            <div class="card-body">

                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group" style="margin: 5px;">

                            <label style="margin: 2px 20px 2px 5px;">Descripción</label>
                            <label style="margin: 2px 0px 2px 86px;">Cantidad</label>
                            <label style="margin: 2px 60px 2px 120px;">Precio</label>
                            <div class="input-group">

                                <InputText style="margin: 5px;" class="form-control"
                                    @bind-Value="productoDetalle.Descripcion" placeholder="Descripción del detalle" />
                                <ValidationMessage For="@(() => productoDetalle.Descripcion)" />

                                <InputNumber style="margin: 5px;" class="form-control"
                                    @bind-Value="productoDetalle.Cantidad" />
                                <ValidationMessage For="@(() => productoDetalle.Cantidad)" />

                                <InputNumber style="margin: 5px;" class="form-control"
                                    @bind-Value="productoDetalle.Precio" />
                                <ValidationMessage For="@(() => productoDetalle.Precio)" />
                                <button type="button" style="margin: 5px;" class="btn btn-lg btn-primary"
                                    @onclick="AgregarDetalle">Agregar Detalle</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {

    [Parameter]
    public int ProductoId { get; set; }
    public Productos producto { get; set; } = new Productos();
    public ProductosDetalle productoDetalle { get; set; } = new ProductosDetalle();

    protected override void OnInitialized()
    {
        producto.ProductoId = ProductoId;
        Buscar();
    }
    public void Nuevo()
    {
        producto = new Productos();
        NuevoDetalle();
    }
    public void Buscar()
    {
        if (this.producto.ProductoId > 0)
        {
            Productos encontrado = ProductosBLL.Buscar(this.producto.ProductoId);
            if (encontrado != null)
            {
                this.producto = encontrado;
                toastService.ShowSuccess("Producto encontrado.");
            }
            else
            {
                toastService.ShowError("No se encontró el producto");
            }
        }
    }
    public void Guardar()
    {

        producto.Ganancia = (int)(((producto.Precio - producto.Costo) * 100) / producto.Costo);
        if (ProductosBLL.Guardar(producto))
        {
            toastService.ShowInfo("Se guardó exitosamente");
        }
        else
            toastService.ShowError("No se pudo guardar.");
    }
    public void CostoChanged()
    {
        PrecioOrCostoChanged();
        ExistenciaOrCostoChanged();
    }
    public void GananciaChanged()
    {
        producto.Ganancia = Convert.ToInt32(((producto.Precio - producto.Costo) / producto.Costo) * 100);
    }
    public void ExistenciaOrCostoChanged()
    {
        producto.ValorInventario = producto.Costo * producto.Existencia;
    }

    public void PrecioOrCostoChanged()
    {
        producto.Ganancia = (int)((producto.Precio - producto.Costo) / producto.Costo) * 100;
    }
    private void Eliminar()
    {
        bool eliminado;
        eliminado = ProductosBLL.Eliminar(producto.ProductoId);
        if (eliminado)
        {
            Nuevo();
            toastService.ShowSuccess("Eliminación exitosa");
        }
        else
        {
            toastService.ShowError("Eliminación fallida");
        }
    }
    private void NuevoDetalle()
    {
        productoDetalle = new ProductosDetalle();
    }
    private void AgregarDetalle()
    {
        if (ProductosBLL.Buscar(this.producto.ProductoId) != null)
        {
            this.producto.ProductosDetalle.Add(this.productoDetalle);
            Guardar();
            NuevoDetalle();
        }
        else
        {
            toastService.ShowError("Se necesita la referencia de un producto existente para guardar sus detalles.");
        }
    }
}
